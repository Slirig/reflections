What happens when you initialize a repository? Why do you need to do it?

It will create a .git folder that is hidden, this folder will hold all the
informations for commits that have happend inside the folder. So that i can go back in time or check what changes have happend to the files. IF i dont do this it will not be a repository and git will have no functions att all on the folder.


How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is an invisible area that will hold the files for a commit, while working directory hold all the files and the repository hold controlls of the files. It offers me the the chance to see what files will be added in a commit before i commit it, this will make me ablo to regret files i dont wont and add other files that i forget.


How can you use the staging area to make sure you have one commit per logical change?

By knowing what i am adding to the staging area i can be confident that it is only one logical change before i commit, i can even use git diff to see what is changing from the old to the new. What i am adding and what i have deleted.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would help me when i dont want to change the orginal file but make test
changes. This way the orginal files will be kept safe and sound. It will organize in 
the sens that i can set labels on the branches to see what i am doing in that branch.


How do the diagrams help you visualize the branch structure?

it will help me see what points in time i can go back to, and it helps me see how were i branched from if it is a side branch. And it will help me know which branches will hold which commits

